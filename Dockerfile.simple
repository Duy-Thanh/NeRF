# Production Dockerfile - Multi-stage build for efficient deployment
FROM ubuntu:22.04 AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    libhiredis-dev \
    libcpprest-dev \
    libssl-dev \
    libboost-all-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Copy framework source
COPY framework/src/ ./src/
COPY framework/CMakeLists.simple.txt ./CMakeLists.txt

# Build the system
RUN mkdir build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc)

# Production runtime image
FROM ubuntu:22.04

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libhiredis0.14 \
    libcpprest2.10 \
    libssl3 \
    libboost-system1.74.0 \
    libboost-filesystem1.74.0 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy built binaries from builder stage
COPY --from=builder /build/build/coordinator_production ./coordinator
COPY --from=builder /build/build/worker_production ./worker

# Set environment variables
ENV REDIS_HOST=redis
ENV REDIS_PORT=6379
ENV HTTP_PORT=8080
ENV GRPC_PORT=50051

# Expose ports
EXPOSE 8080 50051

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/api/status || exit 1

# Default command
CMD ["./coordinator"]